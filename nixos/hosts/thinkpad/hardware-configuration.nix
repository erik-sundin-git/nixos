# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "thunderbolt"
    "nvme"
    "usb_storage"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/3ca0c762-a2d2-484d-9fb3-64d28bdbc027";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-a14769a0-5913-4391-976f-37403fb5b4a9".device = "/dev/disk/by-uuid/a14769a0-5913-4391-976f-37403fb5b4a9";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/A798-402D";
    fsType = "vfat";
    options = [
      "fmask=0022"
      "dmask=0022"
    ];
  };

  fileSystems."/mnt/storagebox" = {
    device = "https://u416901.your-storagebox.de/";
    fsType = "davfs";
    options = [
      "user"
      "noauto"
    ]; # Add additional options as needed
  };

  swapDevices = [ { device = "/dev/disk/by-uuid/72cb4e23-f097-4d90-8b03-7f1af05e3003"; } ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp9s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
